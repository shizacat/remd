#! /bin/bash
#
#chkconfig: - 98 02
#description: Run Daemons remserial
#
### BEGIN INIT INFO
# Provides:          remd
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Run Daemons remserial
# Description:
### END INIT INFO

# Author: ShizaCat <>

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
#PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Run Daemons remserial"
NAME=remd
DAEMON=/usr/sbin/remserial
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
CONFFILE=/etc/$NAME.conf

RETVAL=0

# Exit if the package is not installed
#[ -x "$DAEMON" ] || exit 0

#. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	RUNNING=0
	
	# Проверить не запущен ли уже
	if [ -f $PIDFILE ]; then
		f=`cat $PIDFILE`

		while read line; do
			list=( $line )
			if ps ax | grep -v grep | grep ${list[0]} > /dev/null
			then
				RUNNING=1
				break
			fi
		done < $PIDFILE
	fi

	if [ $RUNNING -eq 1 ]; then
		echo 'Already runing.'
		return 0
	fi

	cat /dev/null > $PIDFILE

	cat $CONFFILE | while read line
	do
		S=${line%%#*}
		list=( $S )
		if [ ${#list[@]} -eq 4 ]
		then
			# SETTING - настроить путь до связываемого устройства  /home/<user_name>/.wine/dosdevices/com1 
			nohup sudo -u ${list[0]} remserial -d -r ${list[1]} -p ${list[2]} -l /home/${list[0]}/.wine/dosdevices/${list[3]} /dev/ptmx > /dev/null 2>&1 &
			echo -e "$!\t${list[0]}\t${list[3]}" >> $PIDFILE
		fi
	done
	echo 'Running'
}

#
# Function that stops the daemon/service
#
do_stop()
{
	if [ -f $PIDFILE ]; then
		cat $PIDFILE | while read line
		do
			list=( $line )
			if ps ax | grep -v grep | grep ${list[0]} > /dev/null; then
				kill -TERM ${list[0]}
			fi
		done
		rm -f $PIDFILE
	else
		echo 'Not running.'
	fi
}

do_restart()
{
	do_stop
	do_start
}

check_status()
{
	if [ -f $PIDFILE ]; then
		echo 'Is Running'
		cat $PIDFILE
	else
		echo 'Is Stoping'
	fi
}

if [ "$(id -u)" != "0" ]; then
        echo "This script must be run as root"
        exit 1
fi

case "$1" in
  start)
	do_start
	;;
  stop)
	do_stop
	;;
  status)
    check_status
    ;;
  restart)
	do_restart
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
	exit 3
	;;
esac

exit $RETVAL
